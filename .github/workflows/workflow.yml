# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI/CD pipeline

on:
  pull_request:
   branches: [ main ]
  # push:
  #   branches: [ main ]
jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: Use Node.js 16.14.0
      uses: actions/setup-node@v2
      with:
        node-version: 16.14.0
#        cache: 'npm'
    - name: update npm 
      run: npm install -g npm@latest

    - name: install modules inside api folder
      run: |
        pwd
        cd api
        pwd
        npm install
    
    - name: set up mongodb connection
      run: |
        pwd
        cd api
        pwd
        echo -e "SKIP_PREFLIGHT_CHECK=true" > .env
        echo -e "DB_PASSWORD=${{ secrets.DB_PASSWORD_DEV }}" >> .env
        echo -e "DB_USER=${{ secrets.DB_USER_DEV }}" >> .env
        echo -e "DB_NAME=${{ secrets.DB_NAME_DEV }}" >> .env
        echo -e "DEBUGLEVEL=5" >> .env
        ls -larth  
        cat .env

    - name: install modules root directory
      run: |
        pwd
        cd src
        pwd
        npm ci

    - name: run build 
      run: npm run build

    - name: run unit testing  
      run: |
        cd src
        pwd
        npm test
        cd ../api
        pwd
        npm test

    - name: setting up production mongodb access
      run : |
        pwd
        cd api
        pwd
        echo -e "DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }}" > .env
        echo -e "DB_USER=${{ secrets.DB_USER_PROD }}" >> .env
        echo -e "DB_NAME=${{ secrets.DB_NAME_PROD }}" >> .env

    
  
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    steps:
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Create CodeDeploy Deployment
      id: deploy
      run: |
        aws deploy create-deployment --application-name CRUD_APP_TEST --deployment-group-name FRONT_DG --deployment-config-name FRONT_DC --github-location repository=${{ github.repository }},commitId=${{ github.sha }}