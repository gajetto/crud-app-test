# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI/CD pipeline

on:
  pull_request:
   branches: [ main ]
  # push:
  #   branches: [ main ]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: Use Node.js 16.14.0
      uses: actions/setup-node@v2
      with:
        node-version: 16.14.0
#        cache: 'npm'
    - name: update npm 
      run: npm install -g npm@8.5.3

    - name: install modules inside api folder
      run: |
        cd api
        pwd
        npm install
    
    - name: Change directory .. back
      run: |
        pwd
        cd ..
        pwd

    - name: install modules root directory
      run: npm install

    - name: run build 
      run: npm run build
#         front unit test and node-server unit test 
    - name: run unit testing
      run: |
        npm test
        cd api
        pwd
        npm test
    
  
  continuous-deployment:
    runs-on: ubuntu-latest
    # Only runs job if previous build step was successful
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Create CodeDeploy Deployment
      id: deploy
      run: |
        aws deploy create-deployment \
          --application-name CRUD_APP_TEST \ 
          --deployment-group-name FRONT_DG \
          --deployment-config-name FRONT_DC \
          --github-location repository=${{ github.repository }},commitId=${{ github.sha }}


# - name: Setup Terraform
#   uses: hashicorp/setup-terraform@v1
#   with:
#     # terraform_version: 0.13.0
#     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}